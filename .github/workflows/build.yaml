on:
  push:
    tags:
      - "v*"
    branches:
      - main
      - dev
jobs:
  package:
    strategy:
      matrix:
        go-version: [1.18]
        os: [macos-11, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set Version
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Normalise platform tag
        id: normalise_platform
        run: |
          tag=$(echo ${{ matrix.platform }} | sed -e 's/\//-/g')
          echo "::set-output name=tag::$tag"
        if: matrix.os == 'macos-11'

      - name: Get Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # - name: Update npm
      #   run: npm install -g npm

      # - name: Install gon via HomeBrew for code signing and app notarization
      #   run: |
      #     brew tap mitchellh/gon
      #     brew install mitchellh/gon/gon
      #   if: matrix.os == 'macos-11'

      - name: Build frontend assets
        env:
          VUE_APP_DESKTOP: 'true'
        run: cd frontend && npm install && npm run build

      - name: Build wails app for macOS
        env:
          VUE_APP_DESKTOP: 'true'
          CGO_ENABLED: '1'
        run: wails build -platform darwin/arm64 -tags "full json1" -s
        if: matrix.os == 'macos-11'

      - name: Compress macOS
        run: cd build/bin && zip -r ../../vsat-darwin-arm64.zip *.app
        if: matrix.os == 'macos-11'

      # - name: Notarise macOS app + create dmg
      #   run: gon -log-level=info gon.config.json
      #   if: matrix.os == 'macos-11'

      - name: Build package windows
        env:
          VUE_APP_DESKTOP: 'true'
          CGO_ENABLED: '1'
        run: |
          $GP = (go env GOPATH)
          $env:path = "$env:path;$GP\bin"
          echo "building on ${{ matrix.os }}"
          choco install mingw
          wails build -platform windows/amd64 -tags "full json1" -clean 
          Compress-Archive -Path .\build\bin\vsat.exe -DestinationPath .\vsat-windows-amd64.zip
        if: matrix.os == 'windows-latest'

      - name: upload artifacts darwin-arm64
        uses: actions/upload-artifact@v2
        with:
          name: vsat-darwin-arm64
          path: vsat-darwin-arm64.zip
        if: matrix.os == 'macos-11'

      - name: upload artifact windows
        uses: actions/upload-artifact@v2
        with:
          name: vsat-windows-amd64.zip
          path: vsat-windows-amd64.zip
        if: matrix.os == 'windows-latest'
